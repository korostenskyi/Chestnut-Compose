plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'kotlinx-serialization'
}

android {
    compileSdk 31
    defaultConfig {
        applicationId "io.korostenskyi.chestnut"
        minSdk 23
        targetSdk 31
        versionCode buildCode
        versionName buildName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }
    signingConfigs {
        release {
            def keystorePropertiesFile = rootProject.file('.signing/release.properties')
            if (keystorePropertiesFile.exists()) {
                def keystoreProperties = new Properties()
                keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
                storeFile rootProject.file('.signing/release.jks')
                storePassword trimKeystoreValue(keystoreProperties['storePassword'])
                keyAlias trimKeystoreValue(keystoreProperties['keyAlias'])
                keyPassword trimKeystoreValue(keystoreProperties['keyPassword'])
            } else {
                println 'Could not find release.properties'
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            buildConfigField "Boolean", "ENABLE_SENTRY", "true"
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "Boolean", "ENABLE_SENTRY", "false"
            versionNameSuffix "-debug"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11
        useIR = true
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    def buildTypeDimension = "buildType"
    flavorDimensions buildTypeDimension
    productFlavors {
        all {
            buildConfigField "String", "TMDB_BASE_URL", '"https://api.themoviedb.org/3/"'
        }
        production {
            dimension buildTypeDimension
            def keystorePropertiesFile = rootProject.file('config/release.properties')
            if (keystorePropertiesFile.exists()) {
                def keystoreProperties = new Properties()
                keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
                buildConfigField "String", "TMDB_API_KEY", "\"${keystoreProperties['TMBD_KEY']}\""
                buildConfigField "String", "SENTRY_DNS_URL", "\"${keystoreProperties['SENTRY_DNS_URL']}\""
            } else {
                println 'Could not find release.properties'
            }
        }
        develop {
            dimension buildTypeDimension
            applicationIdSuffix ".develop"
            def keystorePropertiesFile = rootProject.file('config/dev.properties')
            if (keystorePropertiesFile.exists()) {
                def keystoreProperties = new Properties()
                keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
                buildConfigField "String", "TMDB_API_KEY", "\"${keystoreProperties['TMBD_KEY']}\""
                buildConfigField "String", "SENTRY_DNS_URL", "\"${keystoreProperties['SENTRY_DNS_URL']}\""
            } else {
                println 'Could not find dev.properties'
            }
        }
    }
}

static String trimKeystoreValue(String value) {
    return value.replaceAll("^\"|\"\$", "")
}

dependencies {
    // Android
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.0'
    implementation 'androidx.datastore:datastore-preferences:1.0.0'

    // Compose
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation 'androidx.activity:activity-compose:1.4.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.4.0'
    implementation 'androidx.paging:paging-compose:1.0.0-alpha14'
    implementation 'androidx.navigation:navigation-compose:2.4.0-beta02'

    // Accompanist
    implementation 'com.google.accompanist:accompanist-systemuicontroller:0.20.0'
    implementation 'com.google.accompanist:accompanist-swiperefresh:0.20.0'

    // Kotlin
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.2.2'

    // Hilt
    implementation 'com.google.dagger:hilt-android:2.40'
    kapt 'com.google.dagger:hilt-compiler:2.40'
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0-beta01'

    // Retrofit 2
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.2'
    implementation 'com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:0.8.0'

    // Coil
    implementation 'io.coil-kt:coil-compose:2.0.0-alpha05'

    // Room
    def room_version = "2.3.0"
    api "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // Sentry
    implementation 'io.sentry:sentry-android:5.2.4'

    // Test
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
}